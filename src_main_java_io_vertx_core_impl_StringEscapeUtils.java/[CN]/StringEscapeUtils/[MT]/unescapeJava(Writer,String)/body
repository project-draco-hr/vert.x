{
  if (out == null) {
    throw new IllegalArgumentException("The Writer must not be null");
  }
  if (str == null) {
    return;
  }
  int sz=str.length();
  StringBuilder unicode=new StringBuilder();
  boolean hadSlash=false;
  boolean inUnicode=false;
  for (int i=0; i < sz; i++) {
    char ch=str.charAt(i);
    if (inUnicode) {
      unicode.append(ch);
      if (unicode.length() == 4) {
        int value=Integer.parseInt(unicode.toString(),16);
        out.write((char)value);
        unicode.setLength(0);
        inUnicode=false;
        hadSlash=false;
      }
      continue;
    }
    if (hadSlash) {
      hadSlash=false;
switch (ch) {
case '\\':
        out.write('\\');
      break;
case '\'':
    out.write('\'');
  break;
case '\"':
out.write('"');
break;
case 'r':
out.write('\r');
break;
case 'f':
out.write('\f');
break;
case 't':
out.write('\t');
break;
case 'n':
out.write('\n');
break;
case 'b':
out.write('\b');
break;
case 'u':
{
inUnicode=true;
break;
}
default :
out.write(ch);
break;
}
continue;
}
 else if (ch == '\\') {
hadSlash=true;
continue;
}
out.write(ch);
}
if (hadSlash) {
out.write('\\');
}
}
