{
  byte[] DECODABET=Base64.getDecodabet(options);
  int len34=len * 3 / 4;
  byte[] outBuff=new byte[len34];
  int outBuffPosn=0;
  byte[] b4=new byte[4];
  int b4Posn=0;
  int i=0;
  byte sbiCrop=0;
  byte sbiDecode=0;
  for (i=off; i < off + len; i++) {
    sbiCrop=(byte)(source[i] & 0x7f);
    sbiDecode=DECODABET[sbiCrop];
    if (sbiDecode >= Base64.WHITE_SPACE_ENC) {
      if (sbiDecode >= Base64.EQUALS_SIGN_ENC) {
        b4[b4Posn++]=sbiCrop;
        if (b4Posn > 3) {
          outBuffPosn+=Base64.decode4to3(b4,0,outBuff,outBuffPosn,options);
          b4Posn=0;
          if (sbiCrop == Base64.EQUALS_SIGN) {
            break;
          }
        }
      }
    }
 else {
      System.err.println("Bad Base64 input character at " + i + ": "+ source[i]+ "(decimal)");
      return null;
    }
  }
  byte[] out=new byte[outBuffPosn];
  System.arraycopy(outBuff,0,out,0,outBuffPosn);
  return out;
}
