{
  NetSocketImpl socket=new NetSocketImpl(vertx,channel,context,client.getSslHelper(),true,metrics,metric);
  Map<Channel,NetSocketImpl> connectionMap=new HashMap<>(1);
  connectionMap.put(channel,socket);
  endReadAndFlush();
  ChannelPipeline pipeline=channel.pipeline();
  ChannelHandler inflater=pipeline.get(HttpContentDecompressor.class);
  if (inflater != null) {
    pipeline.remove(inflater);
  }
  pipeline.remove("codec");
  pipeline.replace("handler","handler",new VertxNetHandler(connectionMap){
    @Override public void exceptionCaught(    ChannelHandlerContext chctx,    Throwable t) throws Exception {
      client.removeChannel(channel);
      super.exceptionCaught(chctx,t);
    }
    @Override public void channelInactive(    ChannelHandlerContext chctx) throws Exception {
      client.removeChannel(channel);
      super.channelInactive(chctx);
    }
    @Override public void channelRead(    ChannelHandlerContext chctx,    Object msg) throws Exception {
      if (msg instanceof HttpContent) {
        ReferenceCountUtil.release(msg);
        return;
      }
      super.channelRead(chctx,msg);
    }
  }
);
  return socket;
}
