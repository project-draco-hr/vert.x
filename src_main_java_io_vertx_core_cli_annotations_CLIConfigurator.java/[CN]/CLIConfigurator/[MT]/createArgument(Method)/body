{
  TypedArgument arg=new TypedArgument();
  Argument argument=method.getAnnotation(Argument.class);
  arg.setIndex(argument.index());
  arg.setArgName(argument.argName());
  arg.setRequired(argument.required());
  Description description=method.getAnnotation(Description.class);
  if (description != null) {
    arg.setDescription(description.value());
  }
  if (ReflectionUtils.isMultiple(method)) {
    arg.setType(ReflectionUtils.getComponentType(method.getParameters()[0])).setMultiValued(true);
  }
 else {
    final Class<?> type=method.getParameters()[0].getType();
    arg.setType(type);
  }
  Hidden hidden=method.getAnnotation(Hidden.class);
  if (hidden != null) {
    arg.setHidden(true);
  }
  ConvertedBy convertedBy=method.getAnnotation(ConvertedBy.class);
  if (convertedBy != null) {
    arg.setConverter(ReflectionUtils.newInstance(convertedBy.value()));
  }
  DefaultValue defaultValue=method.getAnnotation(DefaultValue.class);
  if (defaultValue != null) {
    arg.setDefaultValue(defaultValue.value());
  }
  return arg;
}
