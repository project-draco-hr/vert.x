{
  final String address=UUID.randomUUID().toString();
  Set<String> addresses=vertx.sharedData().getSet("addresses");
  addresses.add(address);
  eb.registerHandler(address,new Handler<Message<Buffer>>(){
    boolean handled=false;
    public void handle(    Message<Buffer> msg){
      tu.checkThread();
      tu.azzert(!handled);
      tu.azzert(TestUtils.buffersEqual((Buffer)data.get("buffer"),msg.body()));
      tu.azzert(msg.address().equals(address));
      eb.unregisterHandler(address,this);
      handled=true;
      msg.reply(new Buffer("reply" + address));
    }
  }
,new AsyncResultHandler<Void>(){
    public void handle(    AsyncResult<Void> event){
      if (event.succeeded()) {
        tu.testComplete();
      }
 else {
        tu.azzert(false,"Failed to register");
      }
    }
  }
);
}
