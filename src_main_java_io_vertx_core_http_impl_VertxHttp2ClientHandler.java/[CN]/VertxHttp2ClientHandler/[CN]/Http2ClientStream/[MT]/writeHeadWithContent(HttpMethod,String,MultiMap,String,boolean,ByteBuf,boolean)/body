{
  Http2Headers h=new DefaultHttp2Headers();
  h.method(method.name());
  h.path(uri);
  h.scheme("https");
  if (hostHeader != null) {
    h.authority(hostHeader);
  }
  if (headers != null && headers.size() > 0) {
    for (    Map.Entry<String,String> header : headers) {
      h.add(Http2HeadersAdaptor.toLowerCase(header.getKey()),header.getValue());
    }
  }
  if (handler.http2Pool.client.getOptions().isTryUseCompression() && h.get(HttpHeaderNames.ACCEPT_ENCODING) == null) {
    h.set(HttpHeaderNames.ACCEPT_ENCODING,DEFLATE_GZIP);
  }
  encoder.writeHeaders(handlerCtx,stream.id(),h,0,end && content == null,handlerCtx.newPromise());
  if (content != null) {
    writeBuffer(content,end);
  }
 else {
    handlerCtx.flush();
  }
}
