{
  if (wsStream.endHandler() != null || requestStream.endHandler() != null) {
    Handler<Void> wsEndHandler=wsStream.endHandler();
    wsStream.endHandler(null);
    Handler<Void> requestEndHandler=requestStream.endHandler();
    requestStream.endHandler(null);
    Handler<AsyncResult<Void>> next=done;
    done=new AsyncResultHandler<Void>(){
      @Override public void handle(      AsyncResult<Void> event){
        if (event.succeeded()) {
          if (wsEndHandler != null) {
            wsEndHandler.handle(event.result());
          }
          if (requestEndHandler != null) {
            requestEndHandler.handle(event.result());
          }
        }
        if (next != null) {
          next.handle(event);
        }
      }
    }
;
  }
  ContextImpl context=vertx.getOrCreateContext();
  if (!listening) {
    executeCloseDone(context,done,null);
    return;
  }
  listening=false;
synchronized (vertx.sharedHttpServers()) {
    if (actualServer != null) {
      if (requestStream.handler() != null) {
        actualServer.reqHandlerManager.removeHandler(new HttpHandler(requestStream.handler(),connectionHandler),listenContext);
      }
      if (wsStream.handler() != null) {
        actualServer.wsHandlerManager.removeHandler(wsStream.handler(),listenContext);
      }
      if (actualServer.reqHandlerManager.hasHandlers() || actualServer.wsHandlerManager.hasHandlers()) {
        if (done != null) {
          executeCloseDone(context,done,null);
        }
      }
 else {
        actualServer.actualClose(context,done);
      }
    }
  }
  if (creatingContext != null) {
    creatingContext.removeCloseHook(this);
  }
}
