{
  final String path="/some/path";
  final String firstFrame="AAA";
  final String continuationFrame="BBB";
  server=vertx.createHttpServer().requestHandler(new Handler<HttpServerRequest>(){
    public void handle(    final HttpServerRequest req){
      NetSocket sock=getUpgradedNetSocket(req,path);
      Buffer buff=new Buffer();
      buff.appendByte((byte)0x01);
      buff.appendByte((byte)firstFrame.length());
      buff.appendString(firstFrame);
      sock.write(buff);
      buff=new Buffer();
      buff.appendByte((byte)(0x00 | 0x80));
      buff.appendByte((byte)continuationFrame.length());
      buff.appendString(continuationFrame);
      sock.write(buff);
    }
  }
);
  server.listen(8080,"localhost",new AsyncResultHandler<HttpServer>(){
    @Override public void handle(    AsyncResult<HttpServer> ar){
      tu.azzert(ar.succeeded());
      client.connectWebsocket(path,version,new Handler<WebSocket>(){
        public void handle(        final WebSocket ws){
          ws.frameHandler(new Handler<WebSocketFrame>(){
            boolean receivedFirstFrame=false;
            @Override public void handle(            WebSocketFrame received){
              final Buffer receivedBuffer=new Buffer(received.textData());
              if (!received.isFinalFrame()) {
                tu.azzert(firstFrame.equals(receivedBuffer.toString()));
                receivedFirstFrame=true;
              }
 else               if (receivedFirstFrame && received.isFinalFrame()) {
                tu.azzert(continuationFrame.equals(receivedBuffer.toString()));
                ws.close();
                tu.testComplete();
              }
            }
          }
);
        }
      }
);
    }
  }
);
}
