{
  VertxOptions options=VertxOptions.options();
  int clusterPort=TestUtils.randomPortInt();
  int eventLoopPoolSize=TestUtils.randomPositiveInt();
  int internalBlockingPoolSize=TestUtils.randomPositiveInt();
  int workerPoolSize=TestUtils.randomPositiveInt();
  int blockedThreadCheckPeriod=TestUtils.randomPositiveInt();
  String clusterHost=TestUtils.randomAlphaString(100);
  int maxEventLoopExecuteTime=TestUtils.randomPositiveInt();
  int maxWorkerExecuteTime=TestUtils.randomPositiveInt();
  int proxyOperationTimeout=TestUtils.randomPositiveInt();
  Random rand=new Random();
  boolean haEnabled=rand.nextBoolean();
  int quorumSize=51214;
  String haGroup=TestUtils.randomAlphaString(100);
  options.setClusterPort(clusterPort);
  options.setEventLoopPoolSize(eventLoopPoolSize);
  options.setInternalBlockingPoolSize(internalBlockingPoolSize);
  options.setWorkerPoolSize(workerPoolSize);
  options.setBlockedThreadCheckPeriod(blockedThreadCheckPeriod);
  options.setClusterHost(clusterHost);
  options.setMaxEventLoopExecuteTime(maxEventLoopExecuteTime);
  options.setMaxWorkerExecuteTime(maxWorkerExecuteTime);
  options.setProxyOperationTimeout(proxyOperationTimeout);
  options.setHAEnabled(haEnabled);
  options.setQuorumSize(quorumSize);
  options.setHAGroup(haGroup);
  options=VertxOptions.copiedOptions(options);
  assertEquals(clusterPort,options.getClusterPort());
  assertEquals(eventLoopPoolSize,options.getEventLoopPoolSize());
  assertEquals(internalBlockingPoolSize,options.getInternalBlockingPoolSize());
  assertEquals(workerPoolSize,options.getWorkerPoolSize());
  assertEquals(blockedThreadCheckPeriod,options.getBlockedThreadCheckPeriod());
  assertEquals(clusterHost,options.getClusterHost());
  assertEquals(maxEventLoopExecuteTime,options.getMaxEventLoopExecuteTime());
  assertEquals(maxWorkerExecuteTime,options.getMaxWorkerExecuteTime());
  assertEquals(proxyOperationTimeout,options.getProxyOperationTimeout());
  assertEquals(haEnabled,options.isHAEnabled());
  assertEquals(quorumSize,options.getQuorumSize());
  assertEquals(haGroup,options.getHAGroup());
}
