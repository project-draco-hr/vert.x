{
  final DnsNameResolverContext<List<InetAddress>> ctx=new DnsNameResolverContext<List<InetAddress>>(this,hostname,promise,resolveCache){
    @Override protected boolean finishResolve(    Class<? extends InetAddress> addressType,    List<DnsCacheEntry> resolvedEntries){
      List<InetAddress> result=null;
      final int numEntries=resolvedEntries.size();
      for (int i=0; i < numEntries; i++) {
        final InetAddress a=resolvedEntries.get(i).address();
        if (addressType.isInstance(a)) {
          if (result == null) {
            result=new ArrayList<InetAddress>(numEntries);
          }
          result.add(a);
        }
      }
      if (result != null) {
        promise().trySuccess(result);
        return true;
      }
      return false;
    }
  }
;
  ctx.resolve();
}
