{
  String usage="    vertx run <main> [-options]                                                \n" + "        runs a verticle called <main> in its own instance of vert.x.           \n" + "        <main> can be a JavaScript script, a Ruby script, A Groovy script,     \n"+ "        a Java class, a Java source file, or a Python Script.\n\n"+ "    valid options are:\n"+ "        -conf <config_file>    Specifies configuration that should be provided \n"+ "                               to the verticle. <config_file> should reference \n"+ "                               a text file containing a valid JSON object      \n"+ "                               which represents the configuration.             \n"+ "        -cp <path>             specifies the path on which to search for       \n"+ "                               <main> and any referenced resources.            \n"+ "                               Defaults to '.' (current directory).            \n"+ "        -instances <instances> specifies how many instances of the verticle    \n"+ "                               will be deployed. Defaults to 1                 \n"+ "        -worker                if specified then the verticle is a worker      \n"+ "                               verticle.                                       \n"+ "        -includes <mod_list>   optional comma separated list of modules        \n"+ "                               which will be added to the classpath of         \n"+ "                               the verticle.                                   \n"+ "        -cluster               if specified then the vert.x instance will form \n"+ "                               a cluster with any other vert.x instances on    \n"+ "                               the network.                                    \n"+ "        -cluster-port          port to use for cluster communication.          \n"+ "                               Default is 0 which means chose a spare          \n"+ "                               random port.                                    \n"+ "        -cluster-host          host to bind to for cluster communication.      \n"+ "                               If this is not specified vert.x will attempt    \n"+ "                               to choose one from the available interfaces.  \n\n"+ "    vertx runmod <modname> [-options]                                          \n"+ "        runs a module called <modname> in its own instance of vert.x.          \n"+ "        If the module is not already installed, Vert.x will attempt to install \n"+ "        it from a repository before running it.                            \n\n"+ "    valid options are:                                                         \n"+ "        -conf <config_file>    Specifies configuration that should be provided \n"+ "                               to the module. <config_file> should reference   \n"+ "                               a text file containing a valid JSON object      \n"+ "                               which represents the configuration.             \n"+ "        -instances <instances> specifies how many instances of the verticle    \n"+ "                               will be deployed. Defaults to 1                 \n"+ "        -cluster               if specified then the vert.x instance will form \n"+ "                               a cluster with any other vert.x instances on    \n"+ "                               the network.                                    \n"+ "        -cluster-port          port to use for cluster communication.          \n"+ "                               Default is 0 which means chose a spare          \n"+ "                               random port.                                    \n"+ "        -cluster-host          host to bind to for cluster communication.      \n"+ "                               If this is not specified vert.x will attempt    \n"+ "                               to choose one from the available interfaces.    \n"+ "        -cp <path>             if specified Vert.x will attempt to find the    \n"+ "                               module on the classpath represented by this     \n"+ "                               path and not in the modules directory           \n"+ "        -ha                    if specified the module will be deployed as a   \n"+ "                               high availability (HA) deployment.              \n"+ "                               This means it can fail over to any other nodes \n"+ "                               in the cluster started with the same HA group   \n"+ "        -quorum                used in conjunction with -ha this specifies the \n"+ "                               minimum number of nodes in the cluster for any  \n"+ "                               HA deployments to be active. Defaults to 0      \n"+ "        -hagroup               used in conjunction with -ha this specifies the \n"+ "                               HA group this node will join. There can be      \n"+ "                               multiple HA groups in a cluster. Nodes will only\n"+ "                               failover to other nodes in the same group.      \n"+ "                               Defaults to __DEFAULT__                       \n\n"+ "    vertx runzip <zipfilename> [-options]                                      \n"+ "        installs then deploys a module which is contained in the zip specified \n"+ "        by <zipfilename>. The module will be installed with a name given by    \n"+ "        <zipfilename> without the .zip extension. If a module with that name   \n"+ "        is already installed this will do nothing.                             \n"+ "        The options accepted by this command are exactly the same as those     \n"+ "        accepted by vertx runmod                                             \n\n"+ "    vertx install <modname> [-options]                                         \n"+ "        attempts to install a module from a remote repository.                 \n"+ "        Module will be installed into a local 'mods' directory or, if the      \n"+ "        module is marked as a system module, the sys-mods directory in the     \n"+ "        Vert.x installation unless the                                         \n"+ "        environment variable VERTX_MODS specifies a different location.      \n\n"+ "    vertx uninstall <modname>                                                  \n"+ "        attempts to uninstall a module from a remote repository.               \n"+ "        Module will be uninstalled from the local 'mods' directory unless the  \n"+ "        environment variable VERTX_MODS specifies a different location.      \n\n"+ "    vertx pulldeps <modname>                                                   \n"+ "        Pulls in the tree of dependencies of the module and puts them in the   \n"+ "        nested module directory (mods) of the module. This allows the module   \n"+ "        to be a completely self contained unit containing all the modules it   \n"+ "        needs to run.                                                          \n"+ "        Vert.x will consult the 'includes' and 'deploys' fields to determine   \n"+ "        which modules to pull in.                                            \n\n"+ "    vertx version                                                              \n"+ "        displays the version";
  log.info(usage);
}
