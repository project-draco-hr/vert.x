{
  context.execute(ctx.channel().eventLoop(),new Runnable(){
    public void run(){
      boolean fire=false;
      try {
        if (handshaker != null && handshaking) {
          if (msg instanceof HttpResponse) {
            HttpResponse resp=(HttpResponse)msg;
            if (resp.getStatus().code() != 101) {
              throw new WebSocketHandshakeException("Websocket connection attempt returned HTTP status code " + resp.getStatus().code());
            }
            response=new DefaultFullHttpResponse(resp.getProtocolVersion(),resp.getStatus());
            response.headers().add(resp.headers());
          }
          if (msg instanceof HttpContent) {
            if (response != null) {
              response.content().writeBytes(((HttpContent)msg).content());
              if (msg instanceof LastHttpContent) {
                response.trailingHeaders().add(((LastHttpContent)msg).trailingHeaders());
                handshakeComplete(ctx,response);
                channel.pipeline().remove(HandshakeInboundHandler.this);
                fire=true;
              }
            }
          }
        }
 else {
          buffered.add(msg);
        }
      }
 catch (      WebSocketHandshakeException e) {
        handshaking=false;
        actualClose();
        fire=false;
        for (; ; ) {
          Object m=buffered.poll();
          if (m == null) {
            break;
          }
        }
        client.handleException(e);
      }
 finally {
        if (fire) {
          for (; ; ) {
            Object m=buffered.poll();
            if (m == null) {
              break;
            }
            ctx.fireChannelRead(m);
          }
        }
      }
    }
  }
);
}
