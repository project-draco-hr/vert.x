{
  if (!handleSocketCreated(sock)) {
    sock.close();
  }
 else {
    final Map<String,Handler<Message>> handlers=new HashMap<>();
    sock.endHandler(new VoidHandler(){
      public void handle(){
        handleSocketClosed(sock,handlers);
      }
    }
);
    sock.dataHandler(new Handler<Buffer>(){
      public void handle(      Buffer data){
        handleSocketData(sock,data,handlers);
      }
    }
);
    final PingInfo pingInfo=new PingInfo();
    pingInfo.timerID=vertx.setPeriodic(pingTimeout,new Handler<Long>(){
      @Override public void handle(      Long id){
        if (System.currentTimeMillis() - pingInfo.lastPing >= pingTimeout) {
          sock.close();
        }
      }
    }
);
    SockInfo sockInfo=new SockInfo();
    sockInfo.pingInfo=pingInfo;
    sockInfos.put(sock,sockInfo);
  }
}
