{
  this.vertx=vertx;
  try {
    URI uri=new URI(repoID);
    if (uri.getUserInfo() != null) {
      int i=uri.getUserInfo().indexOf(":");
      if (i > 0) {
        repoUsername=uri.getUserInfo().substring(0,i);
        repoPassword=uri.getUserInfo().substring(i + 1);
      }
 else {
        repoUsername=null;
        repoPassword=null;
      }
    }
 else {
      repoUsername=null;
      repoPassword=null;
    }
    repoScheme=uri.getScheme();
    repoHost=uri.getHost();
    int port=uri.getPort();
    if (port == -1) {
      port=(repoScheme.equals("https")) ? 443 : 80;
    }
    repoPort=port;
    contentRoot=uri.getPath();
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw new IllegalArgumentException(repoID + " is not a valid repository identifier");
  }
}
