{
  this.vertx=vertx;
  try {
    URI uri=new URI(repoID);
    if (uri.getUserInfo() != null && uri.getUserInfo().contains(":")) {
      repoUsername=uri.getUserInfo().substring(0,uri.getUserInfo().indexOf(":"));
      repoPassword=uri.getUserInfo().substring(uri.getUserInfo().indexOf(":") + 1);
    }
 else {
      repoUsername=null;
      repoPassword=null;
    }
    repoScheme=uri.getScheme();
    repoHost=uri.getHost();
    int port=uri.getPort();
    if (port == -1) {
      port=(repoScheme.equals("https")) ? 443 : 80;
    }
    repoPort=port;
    contentRoot=uri.getPath();
  }
 catch (  Exception e) {
    throw new IllegalArgumentException(repoID + " is not a valid repository identifier");
  }
}
