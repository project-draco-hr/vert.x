{
  NetServer server=vertx.createNetServer();
  tu.azzert(server.setSSL(false) == server);
  tu.azzert(!server.isSSL());
  tu.azzert(server.setSSL(true) == server);
  tu.azzert(server.isSSL());
  String pwd=TestUtils.randomUnicodeString(10);
  tu.azzert(server.setKeyStorePassword(pwd) == server);
  tu.azzert(server.getKeyStorePassword().equals(pwd));
  String path=TestUtils.randomUnicodeString(10);
  tu.azzert(server.setKeyStorePath(path) == server);
  tu.azzert(server.getKeyStorePath().equals(path));
  pwd=TestUtils.randomUnicodeString(10);
  tu.azzert(server.setTrustStorePassword(pwd) == server);
  tu.azzert(server.getTrustStorePassword().equals(pwd));
  path=TestUtils.randomUnicodeString(10);
  tu.azzert(server.setTrustStorePath(path) == server);
  tu.azzert(server.getTrustStorePath().equals(path));
  tu.azzert(server.setReuseAddress(true) == server);
  tu.azzert(server.isReuseAddress());
  tu.azzert(server.setReuseAddress(false) == server);
  tu.azzert(!server.isReuseAddress());
  tu.azzert(server.setSoLinger(10) == server);
  tu.azzert(server.getSoLinger() == 10);
  tu.azzert(server.setTCPKeepAlive(true) == server);
  tu.azzert(server.isTCPKeepAlive());
  tu.azzert(server.setTCPKeepAlive(false) == server);
  tu.azzert(!server.isTCPKeepAlive());
  tu.azzert(server.setTCPNoDelay(true) == server);
  tu.azzert(server.isTCPNoDelay());
  tu.azzert(server.setTCPNoDelay(false) == server);
  tu.azzert(!server.isTCPNoDelay());
  int rbs=new Random().nextInt(1024 * 1024) + 1;
  tu.azzert(server.setReceiveBufferSize(rbs) == server);
  tu.azzert(server.getReceiveBufferSize() == rbs);
  try {
    server.setReceiveBufferSize(0);
    tu.azzert(false,"Should throw exception");
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    server.setReceiveBufferSize(-1);
    tu.azzert(false,"Should throw exception");
  }
 catch (  IllegalArgumentException e) {
  }
  int sbs=new Random().nextInt(1024 * 1024);
  tu.azzert(server.setSendBufferSize(sbs) == server);
  tu.azzert(server.getSendBufferSize() == sbs);
  try {
    server.setSendBufferSize(0);
    tu.azzert(false,"Should throw exception");
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    server.setSendBufferSize(-1);
    tu.azzert(false,"Should throw exception");
  }
 catch (  IllegalArgumentException e) {
  }
  int trafficClass=new Random().nextInt(10000000);
  tu.azzert(server.setTrafficClass(trafficClass) == server);
  tu.azzert(server.getTrafficClass() == trafficClass);
  server.close();
  tu.testComplete();
}
