{
  final int numConnections=10;
abstract class Aggregator {
    int count;
    void inc(){
      if (++count == numConnections) {
        action();
      }
    }
    abstract void action();
  }
  final Aggregator connected=new Aggregator(){
    public void action(){
      client.connect(1234,new AsyncResultHandler<NetSocket>(){
        public void handle(        AsyncResult<NetSocket> res){
          res.result().write("foo");
        }
      }
);
    }
  }
;
  final Aggregator receivedData=new Aggregator(){
    public void action(){
      tu.testComplete();
    }
  }
;
  for (int i=0; i < numConnections; i++) {
    client.connect(1234,new AsyncResultHandler<NetSocket>(){
      public void handle(      AsyncResult<NetSocket> res){
        connected.inc();
        res.result().dataHandler(new Handler<Buffer>(){
          public void handle(          Buffer data){
            receivedData.inc();
          }
        }
);
      }
    }
);
  }
}
