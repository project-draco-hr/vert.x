{
  this.vertx=vertx;
  this.deploymentManager=deploymentManager;
  this.clusterManager=clusterManager;
  this.quorumSize=quorumSize;
  this.group=group == null ? "__DEFAULT__" : group;
  this.haInfo=new JsonObject();
  haInfo.putArray("verticles",new JsonArray());
  haInfo.putString("group",this.group);
  this.clusterMap=clusterManager.getSyncMap(CLUSTER_MAP_NAME);
  this.nodeID=clusterManager.getNodeID();
  clusterManager.nodeListener(new NodeListener(){
    @Override public void nodeAdded(    String nodeID){
      HAManager.this.nodeAdded(nodeID);
    }
    @Override public void nodeLeft(    String leftNodeID){
      HAManager.this.nodeLeft(leftNodeID);
    }
  }
);
  clusterMap.put(nodeID,haInfo.encode());
  quorumTimerID=vertx.setPeriodic(QUORUM_CHECK_PERIOD,new Handler<Long>(){
    @Override public void handle(    Long timerID){
      checkHADeployments();
    }
  }
);
synchronized (this) {
    checkQuorum();
  }
}
