{
  if (enabledCipherSuites != null && !enabledCipherSuites.isEmpty()) {
    String[] toUse=enabledCipherSuites.toArray(new String[enabledCipherSuites.size()]);
    engine.setEnabledCipherSuites(toUse);
  }
  engine.setUseClientMode(client);
  Set<String> protocols=new HashSet<>(Arrays.asList(DEFAULT_ENABLED_PROTOCOLS));
  protocols.retainAll(Arrays.asList(engine.getEnabledProtocols()));
  if (enabledProtocols != null && !enabledProtocols.isEmpty() && !protocols.isEmpty()) {
    protocols.retainAll(enabledProtocols);
    if (protocols.isEmpty()) {
      log.warn("no SSL/TLS protocols are enabled due to configuration restrictions");
    }
  }
  engine.setEnabledProtocols(protocols.toArray(new String[protocols.size()]));
  if (!client) {
switch (getClientAuth()) {
case REQUEST:
{
        engine.setWantClientAuth(true);
        break;
      }
case REQUIRED:
{
      engine.setNeedClientAuth(true);
      break;
    }
case NONE:
{
    engine.setNeedClientAuth(false);
    break;
  }
}
}
 else if (verifyHost) {
SSLParameters sslParameters=engine.getSSLParameters();
sslParameters.setEndpointIdentificationAlgorithm("HTTPS");
engine.setSSLParameters(sslParameters);
}
return new SslHandler(engine);
}
