{
  ContextImpl creatingContext=vertx.getContext();
  if (creatingContext != null && creatingContext.isMultiThreadedWorkerContext()) {
    throw new IllegalStateException("Cannot use DnsClient in a multi-threaded worker verticle");
  }
  this.dnsServer=new InetSocketAddress(host,port);
  actualCtx=vertx.getOrCreateContext();
  bootstrap=new Bootstrap();
  bootstrap.group(actualCtx.eventLoop());
  bootstrap.channel(NioDatagramChannel.class);
  bootstrap.option(ChannelOption.ALLOCATOR,PartialPooledByteBufAllocator.INSTANCE);
  bootstrap.handler(new ChannelInitializer<DatagramChannel>(){
    @Override protected void initChannel(    DatagramChannel ch) throws Exception {
      ChannelPipeline pipeline=ch.pipeline();
      pipeline.addLast(new DnsQueryEncoder());
      pipeline.addLast(new DnsResponseDecoder());
    }
  }
);
}
