{
  DeploymentOptions options=new DeploymentOptions();
  JsonObject config=new JsonObject().put("foo","bar");
  Random rand=new Random();
  boolean worker=rand.nextBoolean();
  boolean multiThreaded=rand.nextBoolean();
  String isolationGroup=TestUtils.randomAlphaString(100);
  boolean ha=rand.nextBoolean();
  long gracePeriod=7236;
  long scanPeriod=7812673;
  List<String> cp=Arrays.asList("foo","bar");
  options.setConfig(config);
  options.setWorker(worker);
  options.setMultiThreaded(multiThreaded);
  options.setIsolationGroup(isolationGroup);
  options.setHa(ha);
  options.setExtraClasspath(cp);
  options.setRedeploy(true);
  options.setRedeployGracePeriod(gracePeriod);
  options.setRedeployScanPeriod(scanPeriod);
  DeploymentOptions copy=new DeploymentOptions(options);
  assertEquals(worker,copy.isWorker());
  assertEquals(multiThreaded,copy.isMultiThreaded());
  assertEquals(isolationGroup,copy.getIsolationGroup());
  assertNotSame(config,copy.getConfig());
  assertEquals("bar",copy.getConfig().getString("foo"));
  assertEquals(ha,copy.isHa());
  assertEquals(cp,copy.getExtraClasspath());
  assertNotSame(cp,copy.getExtraClasspath());
  assertTrue(options.isRedeploy());
  assertEquals(gracePeriod,options.getRedeployGracePeriod());
  assertEquals(scanPeriod,options.getRedeployScanPeriod());
}
