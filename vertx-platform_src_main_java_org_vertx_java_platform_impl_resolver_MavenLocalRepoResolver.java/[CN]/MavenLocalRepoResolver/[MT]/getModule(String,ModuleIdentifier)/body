{
  String uriRoot=MavenResolution.getMavenURI(moduleIdentifier);
  File localMetaDataFile=new File(repoID + '/' + uriRoot+ "maven-metadata-local.xml");
  File remoteMetaDataFile=new File(repoID + '/' + uriRoot+ "maven-metadata-remote.xml");
  boolean lExists=localMetaDataFile.exists();
  boolean rExists=remoteMetaDataFile.exists();
  if ((lExists && !rExists) || (lExists && rExists && localMetaDataFile.lastModified() >= remoteMetaDataFile.lastModified())) {
    return getModuleForMetaData(filename,moduleIdentifier,localMetaDataFile,uriRoot);
  }
 else   if (rExists) {
    return getModuleForMetaData(filename,moduleIdentifier,remoteMetaDataFile,uriRoot);
  }
 else {
    String prefix=repoID + '/' + uriRoot+ moduleIdentifier.getName()+ '-'+ moduleIdentifier.getVersion();
    File nonSnapshotFile=new File(prefix + "-mod.zip");
    if (!nonSnapshotFile.exists()) {
      nonSnapshotFile=new File(prefix + ".zip");
    }
    if (nonSnapshotFile.exists()) {
      try {
        Files.copy(nonSnapshotFile.toPath(),Paths.get(filename));
        return true;
      }
 catch (      IOException e) {
        log.error("Failed to copy file",e);
        return false;
      }
    }
 else {
      return false;
    }
  }
}
