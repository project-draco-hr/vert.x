{
  if (buff == null && !end) {
    return;
  }
  if (end) {
    completed=true;
  }
  if (!end && !chunked && !contentLengthSet()) {
    throw new IllegalStateException("You must set the Content-Length header to be the total size of the message " + "body BEFORE sending any data if you are not using HTTP chunked encoding.");
  }
  if (buff != null) {
    written+=buff.readableBytes();
  }
  if (stream == null) {
    if (buff != null) {
      if (pendingChunks == null) {
        pendingChunks=buff;
      }
 else {
        CompositeByteBuf pending;
        if (pendingChunks instanceof CompositeByteBuf) {
          pending=(CompositeByteBuf)pendingChunks;
        }
 else {
          pending=Unpooled.compositeBuffer();
          pending.addComponent(pendingChunks).writerIndex(pendingChunks.writerIndex());
          pendingChunks=pending;
        }
        pending.addComponent(buff).writerIndex(pending.writerIndex() + buff.writerIndex());
      }
    }
    connect(null);
  }
 else {
    if (!headWritten) {
      writeHeadWithContent(buff,end);
    }
 else {
      stream.writeBuffer(buff,end);
    }
    if (end) {
      stream.connection().reportBytesWritten(written);
      if (respHandler != null) {
        stream.endRequest();
      }
    }
  }
}
