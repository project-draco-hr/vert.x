{
  int port=4523;
  String host=TestUtils.randomAlphaString(100);
  MultiMap headers=new CaseInsensitiveMultiMap();
  headers.add("foo","bar");
  String uri=TestUtils.randomAlphaString(100);
  int websocketFrameSize=TestUtils.randomPositiveInt();
  int version=13;
  String subProtocol=TestUtils.randomAlphaString(100);
  JsonObject json=new JsonObject();
  json.putNumber("port",port);
  json.putString("host",host);
  json.putString("requestURI",uri);
  json.putNumber("maxWebsocketFrameSize",websocketFrameSize);
  json.putNumber("version",version);
  json.putArray("subProtocols",new JsonArray().addString(subProtocol));
  JsonObject jheaders=new JsonObject();
  jheaders.putString("foo","bar");
  json.putObject("headers",jheaders);
  WebSocketConnectOptions copy=new WebSocketConnectOptions(json);
  assertEquals(port,copy.getPort());
  assertEquals(host,copy.getHost());
  assertEquals(uri,copy.getRequestURI());
  assertEquals("bar",copy.getHeaders().get("foo"));
  assertEquals(websocketFrameSize,copy.getMaxWebsocketFrameSize());
  assertEquals(version,copy.getVersion());
  assertTrue(copy.getSubProtocols().contains(subProtocol));
  testComplete();
}
