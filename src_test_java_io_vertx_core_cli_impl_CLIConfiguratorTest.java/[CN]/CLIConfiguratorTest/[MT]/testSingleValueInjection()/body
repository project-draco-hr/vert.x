{
  CLIWithSingleValue command=new CLIWithSingleValue();
  CLI cli=CLIConfigurator.define(command.getClass());
  CommandLine evaluatedCLI=parse(cli,"--boolean","--short=1","--byte=1","--int=1","--long=1","--double=1.1","--float=1.1","--char=c","--string=hello");
  CLIConfigurator.inject(evaluatedCLI,command);
  assertThat(command.aBoolean).isTrue();
  assertThat(command.aShort).isEqualTo((short)1);
  assertThat(command.aByte).isEqualTo((byte)1);
  assertThat(command.anInt).isEqualTo(1);
  assertThat(command.aLong).isEqualTo(1l);
  assertThat(command.aDouble).isEqualTo(1.1d);
  assertThat(command.aFloat).isEqualTo(1.1f);
  assertThat(command.aChar).isEqualTo('c');
  assertThat(command.aString).isEqualTo("hello");
  evaluatedCLI=parse(cli,"--boolean2","--short2=1","--byte2=1","--int2=1","--long2=1","--double2=1.1","--float2=1.1","--char2=c","--string=hello");
  CLIConfigurator.inject(evaluatedCLI,command);
  assertThat(command.anotherBoolean).isTrue();
  assertThat(command.anotherShort).isEqualTo((short)1);
  assertThat(command.anotherByte).isEqualTo((byte)1);
  assertThat(command.anotherInt).isEqualTo(1);
  assertThat(command.anotherLong).isEqualTo(1l);
  assertThat(command.anotherDouble).isEqualTo(1.1d);
  assertThat(command.anotherFloat).isEqualTo(1.1f);
  assertThat(command.anotherChar).isEqualTo('c');
  assertThat(command.aString).isEqualTo("hello");
  evaluatedCLI=parse(cli,"--state=NEW");
  CLIConfigurator.inject(evaluatedCLI,command);
  assertThat(command.aState).isEqualTo(Thread.State.NEW);
  evaluatedCLI=parse(cli,"--person=vert.x");
  CLIConfigurator.inject(evaluatedCLI,command);
  assertThat(command.aPerson.name).isEqualTo("vert.x");
  evaluatedCLI=parse(cli,"--person2=vert.x");
  CLIConfigurator.inject(evaluatedCLI,command);
  assertThat(command.anotherPerson.name).isEqualTo("vert.x");
  evaluatedCLI=parse(cli,"--person3=vert.x");
  CLIConfigurator.inject(evaluatedCLI,command);
  assertThat(command.aThirdPerson.name).isEqualTo("vert.x");
  evaluatedCLI=parse(cli,"--person4=bob,morane");
  CLIConfigurator.inject(evaluatedCLI,command);
  assertThat(command.aFourthPerson.first).isEqualTo("bob");
  assertThat(command.aFourthPerson.last).isEqualTo("morane");
}
