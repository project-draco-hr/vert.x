{
  jsonArray.add((Object)"bar");
  jsonArray.add((Object)(Integer.valueOf(123)));
  jsonArray.add((Object)(Long.valueOf(123l)));
  jsonArray.add((Object)(Float.valueOf(1.23f)));
  jsonArray.add((Object)(Double.valueOf(1.23d)));
  jsonArray.add((Object)true);
  byte[] bytes=TestUtils.randomByteArray(10);
  jsonArray.add((Object)(bytes));
  Instant now=Instant.now();
  jsonArray.add(now);
  JsonObject obj=new JsonObject().put("foo","blah");
  JsonArray arr=new JsonArray().add("quux");
  jsonArray.add((Object)obj);
  jsonArray.add((Object)arr);
  assertEquals("bar",jsonArray.getString(0));
  assertEquals(Integer.valueOf(123),jsonArray.getInteger(1));
  assertEquals(Long.valueOf(123l),jsonArray.getLong(2));
  assertEquals(Float.valueOf(1.23f),jsonArray.getFloat(3));
  assertEquals(Double.valueOf(1.23d),jsonArray.getDouble(4));
  assertEquals(true,jsonArray.getBoolean(5));
  assertTrue(TestUtils.byteArraysEqual(bytes,jsonArray.getBinary(6)));
  assertEquals(now,jsonArray.getInstant(7));
  assertEquals(obj,jsonArray.getJsonObject(8));
  assertEquals(arr,jsonArray.getJsonArray(9));
  try {
    jsonArray.add(new SomeClass());
    fail();
  }
 catch (  IllegalStateException e) {
  }
  try {
    jsonArray.add(new BigDecimal(123));
    fail();
  }
 catch (  IllegalStateException e) {
  }
  try {
    jsonArray.add(new Date());
    fail();
  }
 catch (  IllegalStateException e) {
  }
}
