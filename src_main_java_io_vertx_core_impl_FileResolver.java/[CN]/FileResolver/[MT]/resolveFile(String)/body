{
  File file=new File(fileName);
  if (!enableCPResolving) {
    return file;
  }
  if (!file.exists()) {
    File cacheFile=null;
    if (enableCaching && cacheDir != null) {
      cacheFile=new File(cacheDir,fileName);
      if (cacheFile.exists()) {
        return cacheFile;
      }
    }
    ClassLoader cl=getClassLoader();
    InputStream is=cl.getResourceAsStream(fileName);
    if (is != null) {
      if (cacheFile == null) {
        setupCacheDir();
        cacheFile=new File(cacheDir,fileName);
        if (!enableCaching && cacheFile.exists()) {
          cacheFile.delete();
        }
        cacheFile.getParentFile().mkdirs();
      }
      try {
        Files.copy(is,cacheFile.toPath());
      }
 catch (      IOException e) {
        throw new VertxException("Failed to copy file",e);
      }
      return cacheFile;
    }
  }
  return file;
}
