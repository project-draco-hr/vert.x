{
  if (val == null) {
  }
 else   if (val instanceof Number && !(val instanceof BigDecimal)) {
  }
 else   if (val instanceof Boolean) {
  }
 else   if (val instanceof String) {
  }
 else   if (val instanceof CharSequence) {
    val=val.toString();
  }
 else   if (val instanceof JsonObject) {
    if (copy) {
      val=((JsonObject)val).copy();
    }
    val=((JsonObject)val).getMap();
  }
 else   if (val instanceof JsonArray) {
    if (copy) {
      val=((JsonArray)val).copy();
    }
    val=((JsonArray)val).getList();
  }
 else   if (val instanceof Map) {
    if (copy) {
      val=(new JsonObject((Map)val)).copy();
    }
 else {
      val=new JsonObject((Map)val);
    }
  }
 else   if (val instanceof List) {
    if (copy) {
      val=(new JsonArray((List)val)).copy();
    }
 else {
      val=new JsonArray((List)val);
    }
  }
 else   if (val instanceof byte[]) {
    val=Base64.getEncoder().encodeToString((byte[])val);
  }
 else {
    throw new IllegalStateException("Illegal type in JsonObject: " + val.getClass());
  }
  return val;
}
