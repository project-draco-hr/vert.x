{
  final long timeout=500;
  String address="some-address";
  final long start=System.currentTimeMillis();
  eb.registerHandler(address,new Handler<Message<String>>(){
    @Override public void handle(    final Message<String> message){
      message.replyWithTimeout("bar",timeout,new Handler<AsyncResult<Message<String>>>(){
        boolean called;
        @Override public void handle(        AsyncResult<Message<String>> replyReply){
          tu.azzert(!called);
          tu.azzert(replyReply.failed());
          tu.azzert(System.currentTimeMillis() - start >= timeout);
          tu.testComplete();
          called=true;
        }
      }
);
    }
  }
);
  eb.send(address,"foo",new Handler<Message<String>>(){
    @Override public void handle(    final Message<String> reply){
      tu.azzert("bar".equals(reply.body()));
      vertx.setTimer(timeout * 2,new Handler<Long>(){
        @Override public void handle(        Long tid){
          reply.reply("quux");
        }
      }
);
    }
  }
);
}
