{
  if (!writeFuture.isSuccess()) {
    setFailure("failed to send a query",writeFuture.cause());
    return;
  }
  final long queryTimeoutMillis=parent.queryTimeoutMillis();
  if (queryTimeoutMillis > 0) {
    timeoutFuture=parent.ch.eventLoop().schedule(new OneTimeTask(){
      @Override public void run(){
        if (promise.isDone()) {
          return;
        }
        setFailure("query timed out after " + queryTimeoutMillis + " milliseconds",null);
      }
    }
,queryTimeoutMillis,TimeUnit.MILLISECONDS);
  }
}
