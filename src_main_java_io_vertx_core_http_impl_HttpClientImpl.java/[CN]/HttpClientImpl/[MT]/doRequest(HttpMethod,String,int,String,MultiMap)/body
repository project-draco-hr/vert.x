{
  Objects.requireNonNull(method,"no null method accepted");
  Objects.requireNonNull(host,"no null host accepted");
  Objects.requireNonNull(relativeURI,"no null relativeURI accepted");
  checkClosed();
  HttpClientRequest req;
  if (useProxy) {
    relativeURI="http://" + host + (port != 80 ? ":" + port : "")+ relativeURI;
    ProxyOptions proxyOptions=options.getProxyOptions();
    if (proxyOptions.getUsername() != null && proxyOptions.getPassword() != null) {
      if (headers == null) {
        headers=MultiMap.caseInsensitiveMultiMap();
      }
      headers.add("Proxy-Authorization","Basic " + Base64.getEncoder().encodeToString((proxyOptions.getUsername() + ":" + proxyOptions.getPassword()).getBytes()));
    }
    req=new HttpClientRequestImpl(this,method,proxyOptions.getHost(),proxyOptions.getPort(),options.isSsl(),relativeURI,vertx);
    req.setHost(host + (port != 80 ? ":" + port : ""));
  }
 else {
    req=new HttpClientRequestImpl(this,method,host,port,options.isSsl(),relativeURI,vertx);
  }
  if (headers != null) {
    req.headers().setAll(headers);
  }
  return req;
}
