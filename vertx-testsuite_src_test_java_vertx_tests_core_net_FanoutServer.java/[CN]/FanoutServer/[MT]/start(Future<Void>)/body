{
  tu=new TestUtils(vertx);
  final Set<String> connections=vertx.sharedData().getSet("conns");
  server=vertx.createNetServer();
  server.connectHandler(new Handler<NetSocket>(){
    public void handle(    final NetSocket socket){
      tu.checkThread();
      connections.add(socket.writeHandlerID());
      socket.dataHandler(new Handler<Buffer>(){
        public void handle(        Buffer buffer){
          tu.checkThread();
          for (          String actorID : connections) {
            vertx.eventBus().publish(actorID,buffer);
          }
        }
      }
);
      socket.closeHandler(new VoidHandler(){
        public void handle(){
          tu.checkThread();
          connections.remove(socket.writeHandlerID());
        }
      }
);
    }
  }
);
  server.listen(1234,new AsyncResultHandler<NetServer>(){
    @Override public void handle(    AsyncResult<NetServer> ar){
      if (ar.succeeded()) {
        tu.appReady();
        startedResult.setResult(null);
      }
 else {
        ar.cause().printStackTrace();
      }
    }
  }
);
}
