{
  DatagramSocketOptions options=new DatagramSocketOptions();
  Random rand=new Random();
  boolean broadcast=rand.nextBoolean();
  boolean loopbackModeDisabled=rand.nextBoolean();
  int multicastTimeToLive=TestUtils.randomPositiveInt();
  String multicastNetworkInterface=TestUtils.randomAlphaString(100);
  boolean reuseAddress=rand.nextBoolean();
  options.setBroadcast(broadcast);
  options.setLoopbackModeDisabled(loopbackModeDisabled);
  options.setMulticastTimeToLive(multicastTimeToLive);
  options.setMulticastNetworkInterface(multicastNetworkInterface);
  options.setReuseAddress(reuseAddress);
  DatagramSocketOptions copy=new DatagramSocketOptions(options);
  assertEquals(broadcast,copy.isBroadcast());
  assertEquals(loopbackModeDisabled,copy.isLoopbackModeDisabled());
  assertEquals(multicastTimeToLive,copy.getMulticastTimeToLive());
  assertEquals(multicastNetworkInterface,copy.getMulticastNetworkInterface());
  assertEquals(reuseAddress,copy.isReuseAddress());
  testComplete();
}
