{
  tu=new TestUtils(vertx);
  server=vertx.createHttpServer().requestHandler(new Handler<HttpServerRequest>(){
    public void handle(    final HttpServerRequest req){
      tu.checkThread();
      req.response().setChunked(true);
      tu.azzert(!req.response().writeQueueFull());
      req.response().setWriteQueueMaxSize(1000);
      final Buffer buff=TestUtils.generateRandomBuffer(10000);
      vertx.setPeriodic(1,new Handler<Long>(){
        public void handle(        Long id){
          tu.checkThread();
          req.response().write(buff);
          if (req.response().writeQueueFull()) {
            vertx.cancelTimer(id);
            req.response().drainHandler(new VoidHandler(){
              public void handle(){
                tu.checkThread();
                tu.azzert(!req.response().writeQueueFull());
                tu.testComplete();
              }
            }
);
            vertx.eventBus().send("client_resume","");
          }
        }
      }
);
    }
  }
);
  server.listen(8080,new AsyncResultHandler<HttpServer>(){
    @Override public void handle(    AsyncResult<HttpServer> ar){
      tu.azzert(ar.succeeded());
      tu.appReady();
      startedResult.setResult(null);
    }
  }
);
}
