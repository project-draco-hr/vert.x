{
  vertx.sharedData().getMap("params").put("listenport",8181);
  startApp(EchoServer.class.getName(),true);
  vertx.sharedData().getMap("params").remove("listenport");
  int numConnections=100;
  if (initialServers > 0) {
    vertx.sharedData().getSet("connections").clear();
    vertx.sharedData().getSet("servers").clear();
    vertx.sharedData().getSet("instances").clear();
    vertx.sharedData().getMap("params").put("numConnections",numConnections);
    String[] appNames=new String[initialServers];
    for (int i=0; i < initialServers; i++) {
      appNames[i]=startApp(InstanceCheckServer.class.getName(),1);
    }
    startTest(testName);
    assertEquals(numConnections,vertx.sharedData().getSet("connections").size());
    assertEquals(initialServers,vertx.sharedData().getSet("instances").size());
    for (int i=0; i < initialToStop; i++) {
      stopApp(appNames[i]);
    }
  }
  vertx.sharedData().getSet("connections").clear();
  vertx.sharedData().getSet("servers").clear();
  vertx.sharedData().getSet("instances").clear();
  vertx.sharedData().getMap("params").put("numConnections",numConnections);
  if (multipleInstances) {
    startApp(InstanceCheckServer.class.getName(),numInstances);
  }
 else {
    for (int i=0; i < numInstances; i++) {
      startApp(InstanceCheckServer.class.getName(),1);
    }
  }
  startTest(testName);
  assertEquals(numConnections,vertx.sharedData().getSet("connections").size());
  assertEquals(numInstances + initialServers - initialToStop,vertx.sharedData().getSet("instances").size());
}
