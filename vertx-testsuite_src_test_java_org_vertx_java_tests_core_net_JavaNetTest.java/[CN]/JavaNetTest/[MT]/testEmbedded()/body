{
  final CountDownLatch latch=new CountDownLatch(1);
  Vertx vertx=VertxFactory.newVertx();
  final NetServer server=vertx.createNetServer();
  server.connectHandler(new Handler<NetSocket>(){
    public void handle(    NetSocket socket){
      Pump p=Pump.createPump(socket,socket);
      p.start();
    }
  }
);
  final CountDownLatch listenLatch=new CountDownLatch(1);
  server.listen(1234,new AsyncResultHandler<NetServer>(){
    @Override public void handle(    AsyncResult<NetServer> ar){
      if (ar.succeeded()) {
        listenLatch.countDown();
      }
 else {
        ar.cause().printStackTrace();
      }
    }
  }
);
  assertTrue(listenLatch.await(5,TimeUnit.SECONDS));
  final NetClient client=vertx.createNetClient();
  client.connect(1234,new AsyncResultHandler<NetSocket>(){
    public void handle(    AsyncResult<NetSocket> res){
      res.result().dataHandler(new Handler<Buffer>(){
        public void handle(        Buffer data){
          server.close(new AsyncResultHandler<Void>(){
            public void handle(            AsyncResult<Void> res){
              client.close();
              latch.countDown();
            }
          }
);
        }
      }
);
      res.result().write("foo");
    }
  }
);
  assertTrue(latch.await(5,TimeUnit.SECONDS));
}
