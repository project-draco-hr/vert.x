{
  final AtomicInteger attributeCount=new AtomicInteger();
  final String content="Vert.x rocks!";
  vertx.createHttpServer().requestHandler(new Handler<HttpServerRequest>(){
    @Override public void handle(    final HttpServerRequest req){
      if (req.uri().startsWith("/form")) {
        req.response().setChunked(true);
        req.expectMultiPart(true);
        req.uploadHandler(new Handler<HttpServerFileUpload>(){
          @Override public void handle(          final HttpServerFileUpload event){
            event.dataHandler(new Handler<Buffer>(){
              @Override public void handle(              Buffer buffer){
                tu.azzert(content.equals(buffer.toString("UTF-8")));
              }
            }
);
            tu.azzert(event.name().equals("file"));
            tu.azzert(event.filename().equals("tmp-0.txt"));
            tu.azzert(event.contentType().equals("image/gif"));
          }
        }
);
        req.endHandler(new VoidHandler(){
          protected void handle(){
            MultiMap attrs=req.formAttributes();
            attributeCount.set(attrs.size());
            req.response().end();
          }
        }
);
      }
    }
  }
).listen(8080,"0.0.0.0",new AsyncResultHandler<HttpServer>(){
    @Override public void handle(    AsyncResult<HttpServer> ar){
      tu.azzert(ar.succeeded());
      HttpClientRequest req=vertx.createHttpClient().setPort(8080).post("/form",new Handler<HttpClientResponse>(){
        @Override public void handle(        HttpClientResponse resp){
          tu.azzert(200 == resp.statusCode());
          resp.bodyHandler(new Handler<Buffer>(){
            public void handle(            Buffer body){
              tu.azzert(0 == body.length());
            }
          }
);
          tu.azzert(0 == attributeCount.get());
          tu.testComplete();
        }
      }
);
      final String boundary="dLV9Wyq26L_-JQxk6ferf-RT153LhOO";
      Buffer buffer=new Buffer();
      final String body="--" + boundary + "\r\n"+ "Content-Disposition: form-data; name=\"file\"; filename=\"tmp-0.txt\"\r\n"+ "Content-Type: image/gif\r\n"+ "\r\n"+ content+ "\r\n"+ "--"+ boundary+ "--\r\n";
      buffer.appendString(body);
      req.headers().set("content-length",String.valueOf(buffer.length()));
      req.headers().set("content-type","multipart/form-data; boundary=" + boundary);
      req.write(buffer).end();
    }
  }
);
}
