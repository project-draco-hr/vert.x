{
  final List<String> cookies=new ArrayList<>();
  AsyncResultHandler<HttpServer> handler=new AsyncResultHandler<HttpServer>(){
    @Override public void handle(    AsyncResult<HttpServer> ar){
      tu.azzert(ar.succeeded());
      HttpClientRequest req=getRequest(true,"GET","some-uri",new Handler<HttpClientResponse>(){
        public void handle(        final HttpClientResponse resp){
          tu.checkThread();
          resp.endHandler(new VoidHandler(){
            public void handle(){
              tu.azzert(resp.cookies().size() == cookies.size());
              for (int i=0; i < cookies.size(); ++i) {
                tu.azzert(cookies.get(i).equals(resp.cookies().get(i)));
              }
              tu.testComplete();
            }
          }
);
        }
      }
);
      req.end();
    }
  }
;
  startServer(new Handler<HttpServerRequest>(){
    public void handle(    HttpServerRequest req){
      tu.checkThread();
      if (inHeader) {
        final List<String> headers=new ArrayList<>();
        headers.add("h1=h1v1");
        headers.add("h2=h2v2; Expires=Wed, 09-Jun-2021 10:18:14 GMT");
        cookies.addAll(headers);
        req.response().headers().set("Set-Cookie",headers);
      }
      if (inTrailer) {
        req.response().setChunked(true);
        final List<String> trailers=new ArrayList<>();
        trailers.add("t1=t1v1");
        trailers.add("t2=t2v2; Expires=Wed, 09-Jun-2021 10:18:14 GMT");
        cookies.addAll(trailers);
        req.response().trailers().set("Set-Cookie",trailers);
      }
      req.response().end();
    }
  }
,handler);
}
