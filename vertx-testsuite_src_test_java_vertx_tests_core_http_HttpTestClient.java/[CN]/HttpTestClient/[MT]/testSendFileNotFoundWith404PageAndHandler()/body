{
  final String content="<html><body>This is my 404 page</body></html>";
  final File file=setupFile("my-404-page.html",content);
  AsyncResultHandler<HttpServer> handler=new AsyncResultHandler<HttpServer>(){
    @Override public void handle(    AsyncResult<HttpServer> ar){
      tu.azzert(ar.succeeded());
      client.getNow("some-uri",new Handler<HttpClientResponse>(){
        public void handle(        final HttpClientResponse response){
          tu.azzert(response.statusCode() == 404);
          tu.azzert("text/html".equals(response.headers().get("content-type")));
          response.bodyHandler(new Handler<Buffer>(){
            public void handle(            Buffer buff){
              tu.azzert(content.equals(buff.toString()));
            }
          }
);
        }
      }
);
    }
  }
;
  startServer(new Handler<HttpServerRequest>(){
    public void handle(    HttpServerRequest req){
      req.response().sendFile("doesnotexist.html",file.getAbsolutePath(),new Handler<AsyncResult<Void>>(){
        @Override public void handle(        AsyncResult<Void> res){
          tu.azzert(res.succeeded());
          tu.testComplete();
        }
      }
);
    }
  }
,handler);
}
