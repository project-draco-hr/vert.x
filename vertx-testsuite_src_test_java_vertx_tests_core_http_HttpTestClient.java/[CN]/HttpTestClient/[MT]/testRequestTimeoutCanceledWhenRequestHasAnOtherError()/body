{
  final AtomicReference<Throwable> exception=new AtomicReference<>();
  final HttpClientRequest req=getRequest(true,"GET","timeoutTest",new Handler<HttpClientResponse>(){
    public void handle(    HttpClientResponse resp){
      tu.azzert(false,"End should not be called because the request should fail to connect");
    }
  }
);
  req.exceptionHandler(new Handler<Throwable>(){
    @Override public void handle(    Throwable event){
      exception.set(event);
    }
  }
);
  req.setTimeout(800);
  req.end();
  getVertx().setTimer(1500,new Handler<Long>(){
    @Override public void handle(    Long event){
      tu.azzert(exception.get() != null,"Expected an exception to be set");
      tu.azzert(!(exception.get() instanceof TimeoutException),"Expected to not end with timeout exception, but did: " + exception.get());
      tu.checkThread();
      tu.testComplete();
    }
  }
);
}
