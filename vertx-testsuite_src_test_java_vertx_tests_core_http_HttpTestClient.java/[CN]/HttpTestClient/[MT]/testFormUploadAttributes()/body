{
  final AtomicInteger attributeCount=new AtomicInteger();
  vertx.createHttpServer().requestHandler(new Handler<HttpServerRequest>(){
    public void handle(    final HttpServerRequest req){
      if (req.uri().startsWith("/form")) {
        req.response().setChunked(true);
        req.expectMultiPart(true);
        req.uploadHandler(new Handler<HttpServerFileUpload>(){
          @Override public void handle(          final HttpServerFileUpload event){
            event.dataHandler(new Handler<Buffer>(){
              @Override public void handle(              Buffer buffer){
                tu.azzert(false);
              }
            }
);
          }
        }
);
        req.endHandler(new VoidHandler(){
          protected void handle(){
            MultiMap attrs=req.formAttributes();
            attributeCount.set(attrs.size());
            System.out.println("attr is " + attrs.get("framework"));
            tu.azzert(attrs.get("framework").equals("vert x"));
            tu.azzert(attrs.get("runson").equals("jvm"));
            req.response().end();
          }
        }
);
      }
    }
  }
).listen(8080,"0.0.0.0",new AsyncResultHandler<HttpServer>(){
    @Override public void handle(    AsyncResult<HttpServer> ar){
      tu.azzert(ar.succeeded());
      HttpClientRequest req=vertx.createHttpClient().setPort(8080).post("/form",new Handler<HttpClientResponse>(){
        @Override public void handle(        HttpClientResponse resp){
          tu.azzert(200 == resp.statusCode());
          resp.bodyHandler(new Handler<Buffer>(){
            public void handle(            Buffer body){
              tu.azzert(0 == body.length());
            }
          }
);
          tu.azzert(2 == attributeCount.get());
          tu.testComplete();
        }
      }
);
      try {
        Buffer buffer=new Buffer();
        buffer.appendString("framework=" + URLEncoder.encode("vert x","UTF-8") + "&runson=jvm","UTF-8");
        req.headers().set("content-length",String.valueOf(buffer.length()));
        req.headers().set("content-type","application/x-www-form-urlencoded");
        req.write(buffer).end();
      }
 catch (      UnsupportedEncodingException e) {
        tu.azzert(false,e.getMessage());
      }
    }
  }
);
}
