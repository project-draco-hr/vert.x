{
  final Map<String,String> params=genMap(10);
  final String query=generateQueryString(params,delim);
  AsyncResultHandler<HttpServer> handler=new AsyncResultHandler<HttpServer>(){
    @Override public void handle(    AsyncResult<HttpServer> ar){
      tu.azzert(ar.succeeded());
      getRequest(true,"GET","some-uri/?" + query,new Handler<HttpClientResponse>(){
        public void handle(        HttpClientResponse resp){
          tu.checkThread();
          tu.testComplete();
        }
      }
).end();
    }
  }
;
  startServer(new Handler<HttpServerRequest>(){
    public void handle(    HttpServerRequest req){
      tu.checkThread();
      tu.azzert(query.equals(req.query()));
      tu.azzert(req.params().size() == params.size());
      for (      Map.Entry<String,String> entry : req.params()) {
        tu.azzert(entry.getValue().equals(params.get(entry.getKey())));
      }
      req.response().end();
    }
  }
,handler);
}
