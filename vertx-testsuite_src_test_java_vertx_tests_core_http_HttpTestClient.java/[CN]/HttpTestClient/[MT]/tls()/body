{
  TLSTestParams params=TLSTestParams.deserialize(vertx.sharedData().<String,byte[]>getMap("TLSTest").get("params"));
  client.setSSL(true);
  if (params.clientTrustAll) {
    client.setTrustAll(true);
  }
  if (params.clientTrust) {
    client.setTrustStorePath("./src/test/keystores/client-truststore.jks").setTrustStorePassword("wibble");
  }
  if (params.clientCert) {
    client.setKeyStorePath("./src/test/keystores/client-keystore.jks").setKeyStorePassword("wibble");
  }
  final boolean shouldPass=params.shouldPass;
  client.exceptionHandler(new Handler<Throwable>(){
    public void handle(    Throwable t){
      if (shouldPass) {
        tu.azzert(false,"Should not throw exception");
      }
 else {
        tu.testComplete();
      }
    }
  }
);
  client.setPort(4043);
  HttpClientRequest req=client.get("someurl",new Handler<HttpClientResponse>(){
    public void handle(    final HttpClientResponse response){
      tu.checkThread();
      response.bodyHandler(new Handler<Buffer>(){
        public void handle(        Buffer data){
          tu.azzert("bar".equals(data.toString()));
        }
      }
);
      tu.testComplete();
    }
  }
);
  req.end("foo");
}
