{
  AsyncResultHandler<HttpServer> handler=new AsyncResultHandler<HttpServer>(){
    @Override public void handle(    AsyncResult<HttpServer> ar){
      tu.azzert(ar.succeeded());
      final HttpClientRequest req=getRequest(true,"GET","timeoutTest",new Handler<HttpClientResponse>(){
        public void handle(        HttpClientResponse resp){
          tu.azzert(false,"End should not be called because the request should timeout");
        }
      }
);
      req.exceptionHandler(new Handler<Throwable>(){
        @Override public void handle(        Throwable t){
          tu.azzert(t instanceof TimeoutException,"Expected to end with timeout exception but ended with other exception: " + t);
          tu.checkThread();
          tu.testComplete();
        }
      }
);
      req.setTimeout(1000);
      req.end();
    }
  }
;
  startServer(new Handler<HttpServerRequest>(){
    public void handle(    HttpServerRequest req){
    }
  }
,handler);
}
