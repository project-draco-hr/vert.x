{
  this.handlerCtx=handlerCtx;
  this.context=context;
  this.channel=channel;
  io.vertx.core.http.Http2Settings initialSettings=client.getOptions().getHttp2Settings();
  if (initialSettings != null) {
    if (initialSettings.getEnablePush() != DEFAULT_ENABLE_PUSH) {
      initialSettings().pushEnabled(initialSettings.getEnablePush());
    }
    if (initialSettings.getHeaderTableSize() != DEFAULT_HEADER_TABLE_SIZE) {
      initialSettings().headerTableSize(initialSettings.getHeaderTableSize());
    }
    if (initialSettings.getInitialWindowSize() != DEFAULT_INITIAL_WINDOW_SIZE) {
      initialSettings().initialWindowSize(initialSettings.getInitialWindowSize());
    }
    if (!Objects.equals(initialSettings.getMaxConcurrentStreams(),DEFAULT_MAX_CONCURRENT_STREAMS)) {
      initialSettings().maxConcurrentStreams(initialSettings.getMaxConcurrentStreams());
    }
    if (initialSettings.getMaxFrameSize() != DEFAULT_MAX_FRAME_SIZE) {
      initialSettings().maxFrameSize(initialSettings.getMaxFrameSize());
    }
    if (!Objects.equals(initialSettings.getMaxHeaderListSize(),DEFAULT_MAX_HEADER_LIST_SIZE)) {
      initialSettings().maxHeaderListSize(initialSettings.getMaxHeaderListSize());
    }
  }
}
